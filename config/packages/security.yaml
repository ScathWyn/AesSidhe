security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    providers:
        # in_memory: { memory: ~ }
        our_db_provider:
            entity:
                class: App\Entity\User
                property: username
                # if you're using multiple entity managers
                # manager_name: customer
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            provider: our_db_provider
            anonymous: ~
            form_login:
                login_path: sign_in
                check_path: sign_in
                default_target_path: /
                # field names for the username and password fields
                username_parameter: form[_username]
                password_parameter: form[_password]
            logout:
                path:   sign_out
                target: /
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 31536000 # 1 year.
                path:     /
                remember_me_parameter: form[_remember_me]

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # require ROLE_ADMIN for /admin*
        - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
